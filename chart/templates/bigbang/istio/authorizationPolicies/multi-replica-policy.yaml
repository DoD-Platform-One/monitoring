{{- if and .Values.upstream.prometheus.prometheusSpec.replicas (gt (int .Values.upstream.prometheus.prometheusSpec.replicas) 1) .Values.istio.enabled .Values.istio.hardened.enabled }}
{{- if and .Values.istio.enabled (eq .Values.istio.injection "enabled") -}}
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: multi-prometheus-authz-policy
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
spec:
  selector:
    matchLabels:
      prometheus: {{ template "kube-prometheus-stack.fullname" . }}-kube-prometheus
  action: ALLOW
  rules:
  - from:
    - source:
        namespaces:
          - "{{ template "kube-prometheus-stack.namespace" . }}"
        {{- if .Values.upstream.prometheus.thanosService.enabled }}
          - "thanos"
        {{- end }}
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/*"]
  - to:
    - operation:
        ports: 
        - "{{ .Values.upstream.prometheus.service.port }}"
        - "8080"
      {{- if .Values.upstream.prometheus.thanosService.enabled }}
        - "{{ .Values.upstream.prometheus.thanosService.httpPort}}"
        - "{{ .Values.upstream.prometheus.thanosService.port}}"
      {{- end }}
{{- end }}
{{- end }}