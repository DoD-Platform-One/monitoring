{{ if .Values.networkPolicies.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kube-api-operator
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: kube-prometheus-stack-operator
  policyTypes:
  - Egress
  egress:
    - to:
      - ipBlock:
          cidr: {{ .Values.networkPolicies.controlPlaneCidr }}
          {{- if eq .Values.networkPolicies.controlPlaneCidr "0.0.0.0/0" }}
          # ONLY Block requests to cloud metadata IP
          except:
            - 169.254.169.254/32
          {{- end }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kube-api-kube-state-metrics
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  policyTypes:
  - Egress
  egress:
    - to:
      - ipBlock:
          cidr: {{ .Values.networkPolicies.controlPlaneCidr }}
          {{- if eq .Values.networkPolicies.controlPlaneCidr "0.0.0.0/0" }}
          # ONLY Block requests to cloud metadata IP
          except:
            - 169.254.169.254/32
          {{- end }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kube-api-prometheus
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: prometheus
  policyTypes:
  - Egress
  egress:
    - to:
      - ipBlock:
          cidr: {{ .Values.networkPolicies.controlPlaneCidr }}
          {{- if eq .Values.networkPolicies.controlPlaneCidr "0.0.0.0/0" }}
          # ONLY Block requests to cloud metadata IP
          except:
            - 169.254.169.254/32
          {{- end }}
{{- if and .Values.prometheusOperator.enabled .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled (not .Values.prometheusOperator.admissionWebhooks.certManager.enabled) }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kube-api-admission-create
  namespace: {{ .Release.Namespace }}
  annotations:
    # note that we only add this pre-upgrade since there are no networkpolicies to block this pre-install
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  podSelector:
    matchLabels:
      app: {{ template "kube-prometheus-stack.name" $ }}-admission-create
  policyTypes:
  - Egress
  egress:
    - to:
      - ipBlock:
          cidr: {{ .Values.networkPolicies.controlPlaneCidr }}
          {{- if eq .Values.networkPolicies.controlPlaneCidr "0.0.0.0/0" }}
          # ONLY Block requests to cloud metadata IP
          except:
            - 169.254.169.254/32
          {{- end }}
{{- end }}
{{- if and .Values.prometheusOperator.enabled .Values.prometheusOperator.admissionWebhooks.enabled .Values.prometheusOperator.admissionWebhooks.patch.enabled (not .Values.prometheusOperator.admissionWebhooks.certManager.enabled) }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kube-api-admission-patch
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  podSelector:
    matchLabels:
      app: {{ template "kube-prometheus-stack.name" $ }}-admission-patch
  policyTypes:
  - Egress
  egress:
    - to:
      - ipBlock:
          cidr: {{ .Values.networkPolicies.controlPlaneCidr }}
          {{- if eq .Values.networkPolicies.controlPlaneCidr "0.0.0.0/0" }}
          # ONLY Block requests to cloud metadata IP
          except:
            - 169.254.169.254/32
          {{- end }}
{{- end }}
{{- end }}
